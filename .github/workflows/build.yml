name: Build, test and Publish Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10"]
        # Adjust Python versions as needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Install Boost (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libboost-python-dev libboost-graph-dev

      - name: Install Boost (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install boost

      - name: Install Boost (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install boost-msvc

      - name: Build C++ extension (Linux/macOS)
        run: |
          chmod +x scripts/build.sh
          ./scripts/build.sh
        shell: bash
        if: matrix.os != 'windows-latest'

      - name: Build C++ extension (Windows)
        run: scripts\build.bat
        shell: cmd
        if: matrix.os == 'windows-latest'

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl

  test_wheels:
    needs: build_wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels-ubuntu-latest-py*
          path: wheelhouse

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install wheel
        run: pip install wheelhouse/*.whl

      - name: Install test dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest tests/

  publish_wheels:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels-*
          path: wheelhouse

      - name: Install twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload wheelhouse/*.whl
